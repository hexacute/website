{
  "name": "putaindecode.fr",
  "version": "0.0.0",
  "license": "MIT",
  "authors": "https://github.com/putaindecode/putaindecode.fr/graphs/contributors",
  "homepage": "http://putaindecode.fr",
  "repositoryHttpUrl": "http://github.com/putaindecode/putaindecode.fr",
  "repository": {
    "type": "git",
    "url": "https://github.com/putaindecode/putaindecode.fr.git"
  },
  "bugs": {
    "url": "https://github.com/putaindecode/putaindecode.fr/issues"
  },
  "dependencies": {
    "cssrecipes-custom-media-queries": "^0.3.0",
    "cssrecipes-defaults": "^0.5.0",
    "cssrecipes-grid": "^0.4.0",
    "cssrecipes-tooltip": "^0.5.0",
    "cssrecipes-utils": "^0.5.0",
    "cssrecipes-vertical-rhythm": "^0.6.0",
    "normalize.css": "^3.0.3"
  },
  "devDependencies": {
    "async": "^0.9.0",
    "babel": "^5.1.13",
    "babel-core": "^5.1.13",
    "babel-eslint": "^3.0.1",
    "babel-tape-runner": "^1.1.0",
    "caniuse-api": "git://github.com/nyalab/caniuse-api.git#better-postinstall",
    "chalk": "^1.0.0",
    "chokidar": "^1.0.1",
    "classnames": "^1.2.0",
    "connect": "^3.3.5",
    "cssnext": "^1.2.3",
    "eslint": "^0.19.0",
    "eslint-friendly-formatter": "^1.0.5",
    "eslint-plugin-react": "^2.1.1",
    "github": "^0.2.3",
    "glob": "^5.0.5",
    "highlight.js": "^8.5.0",
    "js-yaml": "^3.2.7",
    "lodash": "^3.7.0",
    "marked": "^0.3.3",
    "metalsmith": "^1.5.0",
    "metalsmith-collections": "^0.7.0",
    "metalsmith-serve": "0.0.3",
    "mkdirp": "^0.5.0",
    "multimatch": "^2.0.0",
    "opn": "^1.0.1",
    "promise": "^7.0.0",
    "react": "^0.13.1",
    "rimraf": "^2.3.2",
    "rss": "^1.1.1",
    "tap-spec": "^3.0.0",
    "tape": "^4.0.0",
    "tiny-lr": "^0.1.5",
    "unyield": "0.0.1",
    "url": "^0.10.3"
  },
  "scripts": {
    "#lint": "we use others ext than jsx because of metalsmith issue, see scripts/build.js",
    "lint": "eslint -f node_modules/eslint-friendly-formatter --ext .js,.jsx,.es .",
    "#build": "we use React as a template engine only (not in client side) so we enable DEV mode everywhere to get awesome dev messages and errors",
    "build": "babel-node scripts/build",
    "start": "npm run build",
    "tape": "babel-tape-runner 'scripts/**/__tests__/*' | tap-spec",
    "test": "npm run lint && npm run tape && npm run build -- --production",
    "deploy": "GH_OWNER=putaindecode GH_PROJECT_NAME=putaindecode.fr ./scripts/deploy-to-gh-pages.sh -v"
  }
}
